@model Project.Entities.ViewModels.HomeViewModel;
@{
    ViewData["Title"] = "Home Page";
}

<div>
    @if (Model != null)
    {
        <h5 for="filtersForMissoins">Mission Filters</h5>
        <div id="filtersForMissoins">
            <input id="sortOrder" value="1" type="hidden" />
            <div><label for="searchEmployee">Search: </label> <input id="searchEmployee" class="form-control filter" type="search" /></div>
            <div>
                <label for="missionCountry">Select Country: </label>
                <select id="missionCountry" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    @foreach (var item in Model.CountryList)
                    {
                        <option value="@item.Key">@item.Value</option>
                    }
                </select>
            </div>
            <div>
                <label for="missionCity">Select City: </label>
                <select id="missionCity" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    @foreach (var item in Model.CityList)
                    {
                        <option value="@item.Key">@item.Value</option>
                    }
                </select>
            </div>
            <div>
                <label for="missionTheme">Select Theme: </label>
                <select id="missionTheme" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    @foreach (var item in Model.ThemeList)
                    {
                        <option value="@item.Key">@item.Value</option>
                    }
                </select>
            </div>
            <div>
                <label for="missionType">Mission Type: </label>
                <select id="missionType" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    <option value="TIME">TIME</option>
                    <option value="GOAL">GOAL</option>
                </select>
            </div>
            <div>
                <label for="missionAvailabilty">MissionAvailibility: </label>
                <select id="missionAvailabilty" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    <option value="Weekly">Weekly</option>
                    <option value="Daily">Daily</option>
                </select>
            </div>
            <div>
                <label for="organizationName">Organization Name:</label>
                <select id="organizationName" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    @if (Model.MissionList?.Select(x => x.organization_name) != null)
                    {
                        @foreach (var item in Model.MissionList.Select(x => x.organization_name))
                        {
                            <option value="@item">@item</option>
                        }
                    }

                </select>
            </div>

            <div>
                <label for="startDate">StartDate:</label>
                <input id="startDate" type="date" class="filter form-control" />
            </div>
            <div>
                <label for="endDate">EndDate:</label>
                <input id="endDate" type="date" class="filter form-control" />
            </div>
            <div>
                <label for="deadline">Deadline:</label>
                <input id="deadline" type="date" class="filter form-control" />
            </div>




            <div class="m-2">
                <div id="skillDiv" class="mt-3">
                    <label for="missionSkills">MissionSkills: </label>
                    <p>
                        <button id="applySkills" class="btn border filter text-left" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                            Select Skills
                        </button>
                    </p>
                    <div class="collapse position-absolute" id="collapseExample">
                        <div class="card card-body skill-filter">
                            <div class="form-check">
                                <input class="form-check-input applySkills" type="checkbox" value="ALL" id="flexCheckChecked">
                                <label class="form-check-label" for="flexCheckChecked">
                                    ALL
                                </label>
                            </div>
                            @foreach (var item in Model.SkillList)
                            {
                                <div class="form-check">
                                    <input class="form-check-input applySkills" type="checkbox" value="@item.Key"  id="flexCheckChecked">
                                    <label class="form-check-label" for="flexCheckChecked">
                                        @item.Value
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            @*<div>
                <label for="Rating">Rating:</label>
                <select id="Rating" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    @if (Model.MissionList?.Select(x => x.average_rating) != null)
                    {
                        @foreach (var item in Model.MissionList.Select(x => x.average_rating).Distinct())
                        {
                            <option value="@item">@item</option>
                        }
                    }

                </select>
            </div>*@

            <div>
                <label for="shortDescription">Short Description:</label>
                <select id="shortDescription" class="form-select filter form-select-lg" aria-label=".form-select-lg example">
                    <option selected>ALL</option>
                    @if (Model.MissionList?.Select(x => x.short_description) != null)
                    {
                        @foreach (var item in Model.MissionList.Select(x => x.short_description))
                        {
                            <option value="@item">@item</option>
                        }
                    }

                </select>
            </div>


        </div>
        @if (Model != null && Model.MissionList != null)
        {

           @* <input type="hidden" class="missionTotalCount" value="@Model.MissionList.FirstOrDefault()?.TotalCount" />*@
            @if (@Model.MissionList.FirstOrDefault() != null)
            {
                <h5 class="mt-3">Mission Total Count: <span class="missionTotalCount">@Model.MissionList.FirstOrDefault()?.TotalCount</span></h5>
                <div class="table table-striped" id="missionlisttable">
                    <div class="thead">
                        <div class="tr">
                            <div class="th index" scope="col">#</div>
                            <div class="th text" scope="col">Title<i class="fa fa-sort" id="titleSort"></i></div>
                            <div class="th text-center" scope="col">Country<i class="fa fa-sort" id="countrySort"></i></div>
                            <div class="th text-center" scope="col">City<i class="fa fa-sort" id="citySort"></i></div>
                            <div class="th text-center" scope="col">Theme<i class="fa fa-sort" id="themeSort"></i></div>

                            <div class="th text-center" scope="col">Mission Type<i class="fa fa-sort" id="missionTypeSort"></i></div>
                            <div class="th text" scope="col">ShortDescription<i class="fa fa-sort" id="shortdescSort"></i></div>
                            <div class="th text-center" scope="col">Organization Name<i class="fa fa-sort" id="organizationSort"></i></div>
                            <div class="th text-center" scope="col">Avaliablity<i class="fa fa-sort" id="availibiltySort"></i></div>
                            <div class="th text-center" scope="col">StartDate<i class="fa fa-sort" id="startDateSort"></i></div>
                            <div class="th text-center" scope="col">EndDate<i class="fa fa-sort" id="endDateSort"></i></div>
                            <div class="th text-center" scope="col">Deadline<i class="fa fa-sort" id="deadlineSort"></i></div>
                            <div class="th text-center" scope="col">TotalCount<i class="fa fa-sort"></i></div>
                            <div class="th text-center" scope="col">Rating<i class="fa fa-sort"></i></div>

                        </div>
                    </div>



                    <div id="MissionTabel" class="tbody">
                        @*<partial name="_MissionList" model="Model"></partial>*@
                    </div>
                </div>
            }

            <div class="tabelpagination d-flex justify-content-end mt-5"></div>
        }
        <label for="pageSize">Page Size: </label>
        <select id="pageSize" class="form-select filter form-select-lg mb-3" aria-label=".form-select-lg example">
            <option selected value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
    }
</div>
<script>

    //function toggleAllSkills(checkbox) {
    //    var checkboxes = document.getElementsByName('selectedSkills');
    //    for (var i = 0; i < checkboxes.length; i++) {
    //        checkboxes[i].checked = checkbox.checked;
    //    }
    //}

    $("#searchEmployee").keyup(function (e) {
        var SearchText = $(this).val();
        console.log(SearchText);
        paginate(FirstPage, SearchText);
    });
    $("#missionCity").change(function (e) {
        paginate(FirstPage);
    });
    $("#missionCountry").change(function (e) {
        paginate(FirstPage);
    });
    $("#missionTheme").change(function (e) {
        paginate(FirstPage);
    });
    $("#missionType").change(function (e) {
        paginate(FirstPage);
    });
    $("#missionAvailabilty").change(function (e) {
        paginate(FirstPage);
    });
    $("#organizationName").change(function (e) {
        paginate(FirstPage);
    });
    $("#startDate").change(function (e) {
        paginate(FirstPage);
    });
    $("#endDate").change(function (e) {
        paginate(FirstPage);
    });
    $("#deadline").change(function (e) {
        paginate(FirstPage);
    });
    $(".applySkills").click(function (e) {

        paginate(FirstPage);
    });
    $("#shortDescription").click(function (e) {

        paginate(FirstPage);
    });
    $("#Rating").change(function (e) {
        paginate(FirstPage);
       

    });
    var expression = "mission_id";
    var isSortByAsc = $("#sortOrder").val();
    $("#titleSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "title";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#countrySort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "countryName";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#citySort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "cityName";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#themeSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "themeName";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })

   
    $("#missionTypeSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "mission_type";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })

    $("#shortdescSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "short_description";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })

    $("#organizationSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "organization_name";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#availibiltySort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "availability";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#startDateSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "start_date";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#endDateSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "end_date";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    $("#deadlineSort").click(function (e) {
        if (isSortByAsc == 1) {
            $("#sortOrder").val(0);
        }
        else if (isSortByAsc == 0) {
            $("#sortOrder").val(1);
        }
        expression = "deadline";
        paginate(FirstPage);
        isSortByAsc = $("#sortOrder").val();
    })
    
    //change _search skill list Page size
    var pageSize = $("#pageSize").val();
    var FirstPage = 1;
    paginate(1);
    function paginate(pageNumber, SearchText) {
        $("#pageSize").change(function (e) {
            pageSize = $(this).val();
            pageNumber = $(".pagebtn.active").val();
            paginate(1);
        });

        countryId = $("#missionCountry").val();
        if (countryId == "ALL") {
            countryId = null;
        }
        cityId = $("#missionCity").val();
        if (cityId == "ALL") {
            cityId = null;
        }
        themeId = $("#missionTheme").val();
        if (themeId == "ALL") {
            themeId = null;
        }
        missionType = $("#missionType").val();
        if (missionType == "ALL") {
            missionType = null;
        }
        missionAvailabilty = $("#missionAvailabilty").val();
        if (missionAvailabilty == "ALL") {
            missionAvailabilty = null;
        }
        organizationName = $("#organizationName").val();
        if (organizationName == "ALL") {
            organizationName = null;
        }
        shortDescription = $("#shortDescription").val();
        if (shortDescription == "ALL") {
            shortDescription = null;
        }
        Rating = $("#Rating").val();
        if (Rating == "ALL") {
            Rating = null;
        }
        var startDate = $("#startDate").val();
        if (startDate != "") {
            startDate = startDate.concat(" 00:00:00.000");
        }
        else {
            startDate = null;
        }
        var endDate = $("#endDate").val();
        if (endDate != "") {
            endDate = endDate.concat(" 00:00:00.000");
        }
        else {
            endDate = null;
        }
        var deadline = $("#deadline").val();
        if (deadline != "") {
            deadline = deadline.concat(" 00:00:00.000");
        }
        else {
            deadline = null;
        }
        var allSkills = [];
        var allSkillString = null;
        $.each($(".form-check-input:checked"), function () {
            allSkills.push($(this).val());
        });
        if (allSkills.length != 0 && allSkills[0] != "ALL") {
            allSkillString = allSkills.toString();

        }

        $.ajax({
            url: "@Url.Action("MissionPagination","Home")",
            type: "POST",
            data: { queryParams: { Search: SearchText, CountryId: countryId, CityId: cityId, ThemeId: themeId, MissionType: missionType, MissionAvailibility: missionAvailabilty, OrganizationName: organizationName, StartDate: startDate, EndDate: endDate, Deadline: deadline, MissionSkill: allSkillString,ShortDescription:shortDescription,Rating:Rating, PageNumber: pageNumber, PageSize: pageSize, Expression: expression, IsSortByAsc: isSortByAsc } },
            dataType: "html",
            success: function (responce) {
                if (responce != null) {
                    $('#MissionTabel').empty();
                    $('#MissionTabel').html(responce);

                    if ($("#hiddenMissionCount").val() != 0) {
                        $(".missionTotalCount").text($("#hiddenMissionCount").val());
                    }
                    else {
                        $(".missionTotalCount").text(0);
                    }
                   
                    var totalRecords = $(".missionTotalCount").text();
                    var totalPages = Math.ceil(totalRecords / pageSize);

                    //console.log(totalPages, totalRecords);
                    var paginationHtml = '';
                    $('.tabelpagination').html(paginationHtml);
                    if (totalPages > 1) {
                        paginationHtml = '';
                        paginationHtml += '<buttons class="border not-selectable pagebtn">«</buttons>';
                        paginationHtml += '<buttons class="border not-selectable pagebtn"><</buttons>';
                        for (var i = 1; i <= totalPages; i++) {
                            if (i === pageNumber) {
                                paginationHtml += '<buttons class="border not-selectable pagebtn active">' + i + '</buttons>';
                            } else {
                                paginationHtml += '<buttons class="border not-selectable pagebtn">' + i + '</buttons>';
                            }
                        }
                        paginationHtml += '<buttons class="border not-selectable pagebtn">></buttons>';
                        paginationHtml += '<buttons class="border not-selectable pagebtn">»</buttons>';
                        $('.tabelpagination').html(paginationHtml);
                        $('.pagebtn').on('click', function () {
                            var direction = $(this).text();
                            console.log(direction);
                            if (direction === '«') {      // First page
                                pageNumber = 1;
                            }
                            else if (direction === '»') { // Last page
                                pageNumber = totalPages;
                            }
                            else if (direction === '<') { // Previous page
                                if (pageNumber > 1) {
                                    pageNumber--;
                                }
                            }
                            else if (direction === '>') { // Next page
                                if (pageNumber < totalPages) {
                                    pageNumber++;
                                }
                            }
                            else if (!isNaN(direction)) { // Page number
                                pageNumber = parseInt(direction);
                            }
                            if (pageNumber < 1) {
                                pageNumber = 1;
                            }
                            // Fetch user list with updated page number
                            paginate(pageNumber);
                        });
                    }
                    //console.log(paginationHtml);
                }
            },
            error: function (e) {
                console.log(e);
            }
        });
    }

</script>
